version: '3'
services:
  zookeeper:
    image: zookeeper:3.9.2
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.1.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - inventory-service
      - order-service

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      MONGO_URI: mongodb://root:example@mongodb:27017/inventory?authSource=admin
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - kafka
      - mongodb

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      MONGO_URI: mongodb://root:example@mongodb:27017/order?authSource=admin
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - kafka
      - mongodb
